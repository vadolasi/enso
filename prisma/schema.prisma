generator client {
  provider = "prisma-client-js"
}

generator kysely {
  provider = "prisma-kysely"
  output   = "../src/app/api/graphql/database"
}

generator pothos {
  provider    = "prisma-pothos-types"
  prismaUtils = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Cargo {
  ADMINISTRADOR
  USUARIO
}

model Account {
  id                 String    @id @default(cuid())
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])
  userId             Int

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  userId       Int
}

model User {
  id                 Int     @id @default(autoincrement())
  imagem             String?
  nome               String
  email              String  @unique
  emailConfirmado    Boolean @default(false)
  senha              String?
  assasId            String?
  cargo              Cargo   @default(USUARIO)
  respostasObjetivas RespostaObjetiva[]
  postagensForu      PostagemForum[]
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  accounts           Account[]
  sessions           Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Area {
  id            Int @id @default(autoincrement())
  nome          String
  casosClinicos Area_CasoClinico[]
}

model Area_CasoClinico {
  id            Int         @id @default(autoincrement())
  area          Area        @relation(fields: [areaId], references: [id])
  areaId        Int
  casoClinico   CasoClinico @relation(fields: [casoClinicoId], references: [id])
  casoClinicoId Int
}

model CasoClinico {
  id                Int @id @default(autoincrement())
  enunciado         String
  questoesObjetivas QuestaoObjetiva[]
  areas             Area_CasoClinico[]
}

model QuestaoObjetiva {
  id             Int         @id @default(autoincrement())
  enunciado      String
  responses      RespostaObjetiva[]
  casoClinico    CasoClinico @relation(fields: [casoClinicoId], references: [id])
  casoClinicoId  Int
  postagemsForum PostagemForum[]
  alternativas   Alternativa[]
}

model Alternativa {
  id          Int             @id @default(autoincrement())
  enunciado   String
  correta     Boolean         @default(false)
  questao     QuestaoObjetiva @relation(fields: [questaoId], references: [id])
  questaoId   Int
  respostas   RespostaObjetiva[]
}

model RespostaObjetiva {
  id            Int             @id @default(autoincrement())
  usuario       User            @relation(fields: [usuarioId], references: [id])
  usuarioId     Int
  questao       QuestaoObjetiva @relation(fields: [questaoId], references: [id])
  questaoId     Int
  alternativa   Alternativa     @relation(fields: [alternativaId], references: [id])
  alternativaId Int
  correto       Boolean         @default(false)
}

model PostagemForum {
  id            Int              @id @default(autoincrement())
  usuario       User             @relation(fields: [usuarioId], references: [id])
  usuarioId     Int
  questao       QuestaoObjetiva? @relation(fields: [questaoId], references: [id])
  questaoId     Int?
  comentario    String
  dataCriacao   DateTime         @default(now())
  dataAtualizao DateTime         @updatedAt
  replyTo       PostagemForum?   @relation("ReplyTo", fields: [replyToId], references: [id])
  replyToId     Int?
  replies       PostagemForum[]  @relation("ReplyTo")
}
