type Alternativa {
  correta: Boolean!
  enunciado: String!
  id: ID!
}

type CasoClinico {
  enunciado: String!
  id: ID!
  questoes: [Questao!]!
}

input CreateAlternativaInput {
  correta: Boolean!
  enunciado: String!
  enunciadoDelta: String!
}

input CreateQuestaoInput {
  alternativas: [CreateAlternativaInput!]!
  enunciado: String!
  enunciadoDelta: String!
}

type Mutation {
  createCasoClinico(enunciado: String!, enunciadoDelta: String!, questoes: [CreateQuestaoInput!]!): CasoClinico!
  responderCasoClinico(id: Int!, respostas: [Int!]!): Resultado!
  updateCasoClinico(data: UpdateCasoClinicoInput!, id: Int!): CasoClinico!
}

type Query {
  casoClinico(id: Int!): CasoClinico!
  casosClinicos: [CasoClinico!]!
}

type Questao {
  alternativas: [Alternativa!]!
  enunciado: String!
  id: ID!
}

type Resultado {
  corretas: [Int!]!
  total: Int!
}

input UpdateCasoClinicoInput {
  enunciado: String
  enunciadoDelta: String
  questoes: UpdateCasoClinicoQuestaoInput
}

input UpdateCasoClinicoQuestao {
  alternativas: UpdateCasoClinicoQuestaoAlternativaInput
  enunciado: String
  enunciadoDelta: String
  id: Int!
}

input UpdateCasoClinicoQuestaoAlternativa {
  correta: Boolean
  enunciado: String
  enunciadoDelta: String
  id: Int!
}

input UpdateCasoClinicoQuestaoAlternativaInput {
  create: [CreateAlternativaInput!]
  delete: [ID!]
  update: [UpdateCasoClinicoQuestaoAlternativa!]
}

input UpdateCasoClinicoQuestaoInput {
  create: [CreateQuestaoInput!]
  delete: [ID!]
  id: Int!
  update: [UpdateCasoClinicoQuestao!]
}